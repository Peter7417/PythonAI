PythonAI - Neural Networks: Traffic.py Project

In the get_model function of the project I began with a simple 2D convolution outputting 2 filters with a Max pooling of size 2 x 2 and with a Gidden layer of size 4 without a dropout. The result was not optimal as I got a final probability of 5% accuracy across the board. I added another 2D convolution outputting 4 filters and another Max pooling of 2 x 2. The resulting output was slightly better but remained inaccurate with an accuracy of 7%. I moved to increase the max pooling size of both 2D Convolutions to 4 x 4 only to have my accuracy drop down, so I chose to instead add another hidden layer of size 32 with a drop out of 50%. The result showed my accuracy increase to 12% but I wasn’t closer to the target accuracy of 90%+ and my loss is too large.
 I decided to add another 2D convolution outputting 8 filters, but the accuracy didn’t increase significantly even when I added another hidden layer and my loss was getting larger. Therefore, I decide to keep two 2D convolution layers but increased the filter sizes from 2 and 4 to 8 and 16. The resulting accuracy was 27% and my loss has decreased but was still large. I decided to be bold and increased the hidden layer size from 32 to 128 while decreasing the dropout to 25%. The result gave me an accuracy of 93% with a loss of 0.25. Now I wanted to focus on the loss and ways to reduce it, so I increased the 2d convolution layers from 8 and 16 to 32 and 64 which gave me an accuracy of 96% with a loss of .15. Further experimentation with the hidden layer by adding another layer of size 64 yielded an accuracy of 97% with a loss of .12. Lastly, I changed the dropout value from 25% to 33% to give me a more stable loss value and avoid fluctuations. That’s the model I stuck with since it was accurate with at tolerance of +/-2% on multiple runs.
